apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: dependent-services
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - kube-system
        metrics_path: /metrics
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            target_label: job

      - job_name: 'node'
        static_configs:
          - targets:
              - localhost:9100

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: dependent-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      nodeSelector:
        type: dependent_services  # Ensure it runs on the third node
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"  # Explicitly set the admin username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-password  # Reference the secret
                  key: GF_ADMIN_PASSWORD
            - name: GF_PATHS_CONFIG
              value: "/etc/grafana/grafana.ini"  # Optionally set config file location
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 472:472 /var/lib/grafana && chmod -R 775 /var/lib/grafana"]
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-config
          configMap:
            name: grafana-config  # ConfigMap for Grafana configuration
      tolerations:
        - key: "node-role.kubernetes.io/worker"
          operator: "Exists"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: dependent-services
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana
  type: NodePort  # Exposing Grafana via NodePort so you can access it from outside the cluster (optional)
